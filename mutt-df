BEGIN {
	sig_check = 1

	_threshold = 3
	if(!threshold) {
		threshold = _threshold
	}

	number_of_lines = 0

	quote_line = "> quoted block removed by display filter\n"
	len_ql = length(quote_line)
	headers = 1

	if(vim_edit) {
		headers = 0
		threshold = 99999
		getline
		if(/^On / && /Robert Elz wrote:$/) {
			elz_undo = 1
		}
		print
	}
}

function print_lines() {
	for( n=1; n <= number_of_lines; ++n ) {
		print( lines[n] )
	}
}

headers {
	if(/^[a-zA-Z-]+: /) {
		headers = 1
	}

	if(/^From: Robert Elz <kre@munnari.OZ.AU>$/) {
		elz_undo = 1
	}

	if(/^$/) {
		headers = 0
	}
}

/^\033\][0-9]+;[0-9]+\007\[-- Autoview using elinks/ {
	elinksing = 1
	next
}

elz_undo {
	if(! headers && /^[[:space:]]+[a-zA-Z-]+:/) {
		next
	}

	if(/^[[:space:]]+| >/) {
		sub(/^[[:space:]]+\| ?/, "> ")
	}
}

elinksing && /^\*?([[:space:]]+\*+)+$/ {
	next
}

sig_check {
	if(/^\033\][0-9]+;[0-9]+\007\[-- Begin signature information --\]$/) {
		sig_block = 1
		signed = 1
	}

	if(sig_block) {
		if(/^Problem signature from:/) {
			sub(/.*: /, "", $0)
			key_name = $0
		}

		if(/^\033\][0-9]+;[0-9]+\007\[-- End signature information --\]$/) {
			sig_block = 0
			getline
			getline
		}
		next
	}
}

signed && !headers && /^\033\][0-9]+;[0-9]+\007\Subject: / {
	next
}

{ p = 1 }

/^[[:space:]]*[>]/ {
	match($0, /^[[:space:]]*/)
	if(RLENGTH < 4 ) {
		if( $0 ~ /^[[:space:]]*[>][[:space:]]*$/ ) {
			if( !vim_edit ) {
				next
			}
		}
		padding = RLENGTH
		p = 0
		in_block = 1
		number_of_lines++
		lines[number_of_lines] = $0
		next
	}
}

/^[[:space:]]*$/ {
	if( ! in_message_body ) {
		in_message_body = 1
	} else {
		return_block = 1
		next
	}
}

in_block {
	p = 1
	in_block = 0

	if( number_of_lines <= threshold ) {
		print_lines()
	} else {
		printf("%s\n", lines[1])
		printf("%*s", padding + len_ql, quote_line)
	}

	number_of_lines = 0
}

return_block {
	printf "\n"
	return_block = 0
}

p

END {
	if( in_block ) {
		if( vim_edit ) {
			print_lines()
		} else {
			printf("%*s", padding + len_ql, quote_line)
		}
	}
}

# vim: set ft=awk:
